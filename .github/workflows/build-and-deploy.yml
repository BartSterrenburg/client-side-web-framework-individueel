name: Build and Deploy to Azure

on:
  push:
    branches:
      - release
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - release

jobs:
  build_and_deploy_static_web_app:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Static Web App
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client --legacy-peer-deps
      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
          script: |
              const coredemo = require('@actions/core')
              return await coredemo.getIDToken()
          result-encoding: string
      - name: Build And Deploy Static Web App
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_HAPPY_PEBBLE_06ED2BF03 }}
          action: "upload"
          # For Static Web App
          app_location: "/"  # Path to your app source code
          api_location: "dist/apps/data-api"  # Path to your API source code
          output_location: "dist/apps/my-app"  # Path to your built frontend
          github_id_token: ${{ steps.idtoken.outputs.result }}

  build_and_deploy_nestjs_api:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    needs: build_and_deploy_static_web_app  # Ensures that the static web app deployment completes first
    name: Build and Deploy NestJS API
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm install
      - name: Build NestJS app
        run: npm run build --project=data-api --prod
      - name: Upload build files to Azure
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'train-api'  # Name of the App Service
          publish-profile: ${{ secrets.NESTJS_PUBLISHPROFILE }}  # Secret for the publishing profile
          package: 'dist/apps/data-api'  # Path to the build output of your NestJS API

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          action: "close"  # This will close the PR-related static web app deployment
